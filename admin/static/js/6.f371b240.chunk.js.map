{"version":3,"sources":["modules/orders/components/container.tsx","modules/orders/components/items-table.tsx","modules/orders/components/order-header.tsx","library/common/utils.ts","modules/orders/components/order-totals.tsx","modules/orders/components/order-payment.tsx","modules/orders/order-page.tsx","modules/orders/use-order-page.ts"],"names":["baseBorder","css","PageLayout","styled","div","ItemsTable","item","useDataPage","headers","NumericHeader","data","items","row","src","images","file","url","Row","ImageColumn","LinkColumn","width","path","getRouteUrl","productDetailRoute","id","product_id","params","product_name","TextColumn","quantity","toString","CurrencyColumn","value","price","price_total","OrderHeader","title","lines","moment","date_created","format","date_updated","className","paid","status","HeaderItem","HeaderRoot","map","line","i","key","toCurrency","Intl","NumberFormat","style","currency","OrderTotals","LineValues","label","sub_total","shipment_total","tax_total","total","grand_total","LineValue","LineContent","H3","h3","OrderPayment","OrderPage","afterFetch","fetchData","useFetchData","order","a","ids","t","config","apiSwell","method","body","paging","limit","where","$in","products","results","length","prod","find","p","name","useOrderPage","model","onFetched","PanelBox","onTitle","number","Panel"],"mappings":"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","file":"static/js/6.f371b240.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nconst baseBorder = css`\n  border: 1px solid #e7eaec;\n  border-radius: 4px;\n  padding: 10px 20px;\n`;\n\nexport const PageLayout = styled.div`\n  height: 100%;\n\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-template-rows: 1fr 4fr;\n  grid-gap: 30px;\n\n  grid-template-areas: \n    \"header side\"\n    \"main side\";\n\n  header {\n    grid-area: header;\n    ${baseBorder};\n    display: flex;\n  }\n\n  main {\n    grid-area: main;\n  }\n\n  aside{\n    grid-area: side;\n    ${baseBorder}\n  }\n`;","import React from 'react';\nimport { getRouteUrl } from 'library/common/navigation/utils';\nimport { Table, useDataPage } from 'library/components';\nimport { Order, OrderItem } from '../types';\nimport { productDetailRoute } from 'modules/products/routes';\n\nexport const ItemsTable = () => {\n  const { item } = useDataPage<Order>();\n  return (\n    <Table<OrderItem> \n      headers={[\"\", \"Item\", \"Qty\", <Table.NumericHeader>Price</Table.NumericHeader>, <Table.NumericHeader>Total</Table.NumericHeader>]}\n      data={item?.items ?? []}\n      row={({ row }) => {\n        const src = row.images ? row.images[0]?.file.url : '';\n        return (\n          <Table.Row>\n            <Table.ImageColumn src={src} />\n            <Table.LinkColumn\n              width=\"30%\"\n              path={getRouteUrl(productDetailRoute.path, { id: row.product_id })}\n              params={row}>\n              {row.product_name!}\n            </Table.LinkColumn>\n            <Table.TextColumn>{row.quantity?.toString()}</Table.TextColumn>\n            <Table.CurrencyColumn value={row.price} />\n            <Table.CurrencyColumn value={row.price_total} />\n          </Table.Row>\n        )\n      }} \n    />\n  )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport { useDataPage } from 'library/components';\nimport { Order } from '../types';\n\nexport const OrderHeader = () => {\n  const { item } = useDataPage<Order>();\n  if (!item) {\n    return <></>;\n  }\n  return <>\n    <HeaderItem title=\"Created\" lines={[\n      moment(item?.date_created).format(\"MMM D, YYYY\"),\n      moment(item?.date_created).format('hh:mm a')\n    ]} />\n    <HeaderItem title=\"Updated\" lines={[\n      moment(item?.date_updated).format(\"MMM D, YYYY\"),\n      moment(item?.date_updated).format('hh:mm a')\n    ]} />\n    <HeaderItem title=\"Status\" lines={[\n      <span className=\"text-success\">{item?.paid ? 'Paid' : 'Unpaid'}</span>,\n      <span className=\"text-success\">{ item?.status === 'complete' ? 'Fullfilled' : item?.status }</span>\n    ]} />\n  </>;\n}\n\nconst HeaderItem = ({ title, lines }) => {\n  return (\n    <HeaderRoot className=\"header-item\">\n      <h3>{ title }</h3>\n      {lines.map((line, i) => (\n        <div className=\"line\" key={i} >{line}</div>\n      ))}\n    </HeaderRoot>\n  )\n}\n\nconst HeaderRoot = styled.div`\n  flex: 1;\n  &:not(:last-child) {\n    border-right: 1px solid #dee2e6 !important;\n    margin-right: 40px;\n  }\n  .line {\n    line-height: 22px;\n  }\n`;","\nexport const toCurrency = (value: any) => Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(value);","import React from 'react';\nimport styled from 'styled-components';\nimport { useDataPage } from 'library/components';\nimport { Order } from '../types';\nimport { toCurrency } from 'library/common/utils';\n\nexport const OrderTotals = () => {\n  const { item } = useDataPage<Order>();\n  return (\n    <LineValues>\n      <LineValue label=\"Subtotal\" value={toCurrency(item?.sub_total)} />\n      <LineValue label=\"Shipping\" value={item?.shipment_total ? toCurrency(item?.shipment_total) : '-'} />\n      <LineValue label=\"Taxes\" value={item?.tax_total ? toCurrency(item?.tax_total) : '-'} />\n      <br />\n      <LineValue label=\"Total\" total value={toCurrency(item?.grand_total)} />\n    </LineValues>\n  )\n}\nconst LineValues = styled.div`\n  border: 1px solid #e7eaec;\n  border-radius: 4px;\n  padding: 20px 10px;\n`;\n\nconst LineValue = ({label, value, total = false}) => (\n  <LineContent>\n    <H3 total={total}>{label}</H3>\n    <H3 total={total}>{value}</H3>\n  </LineContent>\n)\nconst LineContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst H3 = styled.h3<{ total?: boolean }>`\n  font-weight: ${({ total }) => total ? 800 : 400}\n`;\n\n","import React from 'react';\n\nexport const OrderPayment = () => {\n  return (\n    <div className=\"panel panel-default mt-4\">\n      <div className=\"panel-heading\">\n        <h3>Payment</h3>\n      </div>\n      <div className=\"panel-body\">\n        <h3>Credit card on file</h3>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { DataPage, Panel, DataPageTitle } from 'library/components';\nimport { Order } from './types';\nimport { PageLayout } from './components/container';\nimport { ItemsTable, OrderHeader, OrderTotals, OrderPayment} from './components/';\nimport { useOrderPage } from './use-order-page';\n\nexport const OrderPage = () => {\n  const { afterFetch } = useOrderPage();\n  return (\n    <DataPage<Order> model=\"orders\" onFetched={afterFetch} >\n      <PanelBox>\n        <DataPageTitle<Order> \n            onTitle={(item) => `Order # ${item?.number}`} \n        />\n        <PageLayout className=\"container\">\n\n          <header>\n            <OrderHeader />\n          </header>\n\n          <main>\n            <ItemsTable />\n            <OrderTotals />\n            <OrderPayment />\n          </main>\n\n          <aside>Side</aside>\n\n        </PageLayout>\n      </PanelBox>\n    </DataPage>\n  )\n};\n\nconst PanelBox = styled(Panel)`\n  .ibox-content {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport default OrderPage;","import { Order } from \"./types\";\nimport { useFetchData } from 'library/common';\nimport { config } from 'config';\nimport { ProductItem } from \"modules/products/types\";\n\nexport const useOrderPage = () => {\n  const { fetchData } = useFetchData();\n  \n  const afterFetch = async (order: Order) => {\n    const ids = order.items.map(t => t.product_id);\n    const { data: { results: products } } = await fetchData < { count: number, results: ProductItem[]}>({\n      url: `${config.apiSwell}/products`,\n      method: 'POST',\n      body: {\n        paging: { limit: 1000 },\n        where: {\n          id: { $in : ids }\n        }\n      }\n    });\n    \n    if (!products.length) {\n      return order;\n    }\n    \n    return {\n      ...order,\n      items: order.items.map(t => {\n        const prod = products.find(p => p.id === t.product_id);\n        return !prod ? t : {\n          ...t,\n          product_name: prod.name,\n          images: prod.images,\n        };\n      })\n    }\n  }\n\n  return {\n    afterFetch,\n  }\n}"],"sourceRoot":""}